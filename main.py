import discord
from discord.ext import commands
import youtube_dl
import os
import requests
from discord.utils import get

from key import key

client = commands.Bot(command_prefix="@")

youtube_dl.utils.bug_reports_message = lambda: ''


def get_link(query):
    temp = requests.get("https://www.youtube.com/results?search_query=" + " ".join(
        query) + " Auto-generated by YouTube&sp=EgIQAQ%253D%253D").text
    if "estimatedResults" in temp and "videoId\":\"" in temp:
        videoID = temp.split("estimatedResults")[1].split("videoId\":\"")[1].split(
            "\""
        )[0]
        videoLink = "https://www.youtube.com/watch?v=" + videoID
        return videoLink


def get_url(link):
    x = youtube_dl.YoutubeDL().extract_info(link, download=False)
    url = x['formats'][0]['url']
    return url


async def join(ctx, voice):
    channel = ctx.author.voice.channel

    try:
        if voice and voice.is_connected():
            await voice.move_to(channel)
        else:
            voice = await channel.connect()
    except:
        pass


@client.command()
async def p(ctx, *query):
    FFMPEG_OPTS = {'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5', 'options': '-vn'}

    voice = get(client.voice_clients, guild=ctx.guild)

    await join(ctx, voice)

    voice = get(client.voice_clients, guild=ctx.guild)

    link = get_link(query)
    source = get_url(link)

    try:
        if voice.is_playing():
            voice.stop()
    except:
        pass

    voice.play(discord.FFmpegPCMAudio(source, **FFMPEG_OPTS))
    voice.is_playing()


@client.command()
async def search(ctx, *url):
    if 'https' not in url:
        await ctx.send(get_link(url))


@client.command()
async def leave(ctx):
    voice = discord.utils.get(client.voice_clients, guild=ctx.guild)
    if voice.is_connected():
        await voice.disconnect()


@client.command()
async def pause(ctx):
    voice = discord.utils.get(client.voice_clients, guild=ctx.guild)
    if voice.is_playing():
        voice.pause()


@client.command()
async def resume(ctx):
    voice = discord.utils.get(client.voice_clients, guild=ctx.guild)
    if voice.is_paused():
        voice.resume()


@client.command()
async def stop(ctx):
    voice = discord.utils.get(client.voice_clients, guild=ctx.guild)
    voice.stop()


client.run(key)
